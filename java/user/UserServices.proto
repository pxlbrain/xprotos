syntax = "proto3";

option java_multiple_files = true;
option java_package = "ai.pixlbrain.backend";

import "user/UserObjects.proto";
import "inventory/Void.proto";

package ai.pixlbrain.backend;

service UserService {
  rpc GetUsers (GRPCGetUsersRequest) returns (GRPCUserResponse);
  rpc SignUp (GRPCUser) returns (UserId);
  rpc UpdateUser (GRPCUser) returns (GRPCUser);
  rpc DeleteUser (StringField) returns (Void);
  rpc GetUserRoles(GRPCRoleRequest) returns (GRPCRoleResponse);
  rpc RemoveUserRoles (IdListRequest) returns (Void);
  rpc AddUserRoles (IdListRequest) returns (Void);
  rpc GetUserPermissions(GRPCRoleRequest) returns (GRPCPermissionResponse);
  rpc RemoveUserPermissions (GRPCPermissionRequest) returns (Void);
  rpc AddUserPermissions (GRPCPermissionRequest) returns (Void);
  rpc GetUser (StringField) returns (GRPCUser);
  rpc GetAuthorizedUser (StringField) returns (Void);
  rpc GetAccessToken (GRPCRefreshTokenRequest) returns (GRPCAuthenticationResult);
  rpc SignIn (GRPCLoginRequest) returns (GRPCLoginResponse);
  rpc SignOut (StringField) returns (Void);
  rpc ChangePassword (StringField) returns (Void);
  rpc GetPresignedUrl(PresignedUrlRequest) returns (PresignedUrlResponse);
  rpc GetUserLogs(GRPCGetUsersRequest) returns (GRPCLogsResponse);

}

service RoleService {
  rpc CreateRole (GRPCRole) returns (GRPCRole);
  rpc UpdateRole (GRPCRole) returns (GRPCRole);
  rpc DeleteRole (StringField) returns (Void);
  rpc GetRole (StringField) returns (GRPCRole);
  rpc GetRoles (GRPCRoleRequest) returns (GRPCRoleResponse);
  rpc GetRoleUsers (GRPCRoleRequest) returns (GRPCUserResponse);
  rpc AddRoleUsers (IdListRequest) returns (Void);
  rpc GetRolePermissions (GRPCRoleRequest) returns (GRPCPermissionResponse);
  rpc AddRolePermissions (GRPCPermissionRequest) returns (Void);
  rpc DeleteRolePermissions (GRPCPermissionRequest) returns (Void);
}

service PermissionService {
  rpc CreatePermissions(GRPCPermissions) returns (Void);
}

service ReferenceLookupService {
  rpc GetReferenceLookup (ReferenceLookupRequest) returns (ReferenceLookupResponse);
  rpc GetReferenceLookupOrdered (ReferenceLookupRequest) returns (ReferenceLookupResponse);
}
