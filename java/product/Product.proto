syntax = "proto3";

package ai.pixlbrain.backend;

option java_multiple_files = true;
option java_package = "ai.pixlbrain.backend";

import "google/protobuf/wrappers.proto";
import "inventory/Void.proto";

service ProductService {
  rpc CreateProduct (GRPCProductRequest) returns (Product) {
  }
  rpc UpdateProduct (GRPCProductRequest) returns (Product) {
  }
  rpc DeleteProduct (ProductId) returns (Void) {
  }
  rpc GetProduct (ProductId) returns (Product) {
  }
  rpc GetAllProducts (Void) returns (Products) {
  }
  rpc GetProductsFromList (ProductListId) returns (Products) {
  }
  rpc AddProductsToList (ProductsAndProductList) returns (Void) {
  }
  rpc RemoveProductsFromList (ProductsAndProductList) returns (Void) {
  }
  rpc GetProductsInRange (DateRange) returns (Products) {
  }
  rpc GetProductsByStatus (Status) returns (Products) {
  }
  rpc GetProductsByCategory (Category) returns (Products) {
  }
  rpc GetProducts (GRPCGetRequest) returns (GRPCProductResposne) {
  }
  rpc AddSideDishes (SideDishIds) returns (Void) {
  }
  rpc AddPlateItems (PlateItemIds) returns (Void) {
  }
  rpc AddMistakenProducts (MistakenProductIds) returns (Void) {
  }
  rpc UploadProducts (BytesWrapper) returns (Void) {
  }
  rpc Train(TrainProductsRequest) returns (Void) {
  }
  rpc SendProductList(LocationAndDeviceId) returns (Void) {
  }
  rpc GetProductsByProductId (ProductId) returns (Products) {
  }
  rpc UploadListToS3(Id) returns (Void) {
  }
}

message Id {
  string id = 1;
}

message BytesWrapper {
  string locationId = 1;
  bytes byteArray = 2;
}

message GRPCProductRequest {
  string locationId = 1;
  Product product = 2;
}

message GRPCProductResposne {
  int32 page = 1;
  int32 size = 2;
  int32 count = 3;
  repeated Product products = 4;
}

message Product {
  string id = 1;
  string created = 2;
  string updated = 3;
  string productId = 4;
  string name = 5;
  string category = 6;
  string subCategory = 7;
  string status = 8;
  string ean = 9;
  bool mlc = 10;
  bool classifier = 11;
  int32 width = 12;
  int32 height = 13;
  string scheduleFrom = 14;
  string scheduleTo = 15;
  string capturingTime = 16;
  string terminalId = 17;
  string displayName = 18;
  repeated NameId sideDishes = 19;
  repeated NameId plateItems = 20;
  repeated NameId mistakenProducts = 21;
  string obid = 22;
}

message Products {
  repeated Product products = 1;
}

message ProductId {
  string id = 1;
}

message ProductsAndProductList {
  repeated string productId = 1;
  string productListId = 2;
}

message ProductListId {
  string id = 1;
}

message DateRange {
  string dateFrom = 1;
  string dateTo = 2;
}

message Status {
  string status = 1;
}

message Category {
  string name = 1;
}

message GRPCGetRequest {
  repeated string locationIds = 1;
  repeated GRPCFilter filter = 2;
  GRPCPaging paging = 3;
}

message GRPCFilter {
  string field = 1;
  string value = 2;
}

message GRPCPaging {
  int32 page = 1;
  int32 size = 2;
}

message GRPCSorting {
  string field = 1;
  string order = 2;
}

message SideDishIds {
  string productId = 1;
  repeated NameId nameIds = 2;
}

message MistakenProductIds {
  string productId = 1;
  repeated NameId nameIds = 2;
}

message PlateItemIds {
  string productId = 1;
  repeated NameId nameIds = 2;
}

message TrainProductsRequest {
  repeated string productIds = 1;
  string client = 2;
  string locationId = 3;
  string name = 4;
}

message LocationAndDeviceId {
  string locationId = 1;
  string deviceId = 2;
}

message NameId {
  string id = 1;
  string name = 2;
}

