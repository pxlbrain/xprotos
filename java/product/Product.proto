syntax = "proto3";

package ai.pixlbrain.backend;

option java_multiple_files = true;
option java_package = "ai.pixlbrain.backend";

import "google/protobuf/wrappers.proto";
import "inventory/Void.proto";
import "common/Filter.proto";
import "common/Enums.proto";

service ProductService {
  rpc CreateProduct (GRPCProductRequest) returns (Product) {
  }
  rpc UpdateProduct (GRPCProductRequest) returns (Product) {
  }
  rpc DeleteProduct (ProductId) returns (Void) {
  }
  rpc ChangeProductArchived (ProductArchived) returns (Void) {
  }
  rpc GetArchivedProducts(ArchivedProductsRequest) returns (GRPCProductResposne) {
  }
  rpc GetProduct (ProductClientLocationRequest) returns (Product) {
  }
  rpc GetAllProducts (Void) returns (Products) {
  }
  rpc GetProductsFromList (ProductListId) returns (Products) {
  }
  rpc AddProductsToList (ProductsAndProductList) returns (Void) {
  }
  rpc RemoveProductsFromList (ProductsAndProductList) returns (Void) {
  }
  rpc GetProductsInRange (DateRange) returns (Products) {
  }
  rpc GetProductsByStatus (Status) returns (Products) {
  }
  rpc GetProductsByCategory (Category) returns (Products) {
  }
  rpc GetProducts (GRPCGetRequest) returns (GRPCProductResposne) {
  }
  rpc GetProductsWithStatus (GRPCGetRequest) returns (GRPCProductResposne) {
  }
  rpc AddSideDishes (SideDishIds) returns (Void) {
  }
  rpc AddPlateItems (PlateItemIds) returns (Void) {
  }
  rpc AddMistakenProducts (MistakenProductIds) returns (Void) {
  }
  rpc UploadProducts (BytesWrapper) returns (Void) {
  }
  rpc AddToProductList (ProductsRequest) returns (Void) {
  }
  rpc SendProductList (LocationAndDeviceId) returns (Void) {
  }
  rpc GetProductsByProductId (ProductId) returns (Products) {
  }
  rpc UploadListToS3 (UploadId) returns (Void) {
  }
  rpc UploadProductPicture (PictureBytes) returns (Void) {
  }
  rpc GetProductsByClientAndLocation (ProductClientLocationRequest) returns (Products) {
  }
  rpc DeleteProductPlateItem (DeleteProductItemRequest) returns (Void) {
  }
  rpc DeleteProductSideDish (DeleteProductItemRequest) returns (Void) {
  }
  rpc DeactivateProducts (ProductsRequest) returns (Void) {
  }
  rpc UploadProductImages (ProductImages) returns (Void) {
  }
  rpc DeleteProductImages (DeleteProductImagesRequest) returns (Void) {
  }
  rpc GetProductsByLocationId (Id) returns (Products) {
  }
  rpc UpdateProductImage (UpdateImageRequest) returns (Void) {
  }
  rpc GetProductCategories (Void) returns (ProductCategories) {
  }
  rpc GetOtherProducts (OtherRequest) returns (Products) {
  }
  rpc GetProductsForDataset (ProductDatasetRequest) returns (Products) {
  }
  rpc GetProductsForDatasetByType (ProductDatasetByTypeRequest) returns (Products) {
  }
  rpc AddKidsItem (KidsRequest) returns (Void) {
  }
  rpc RemoveKidsItem (KidsRequest) returns (Void) {
  }
  rpc GetKidsItem (Id) returns (Product) {
  }
  rpc DeleteMhsProducts (DeleteProductItemRequest) returns (Void) {
  }
  rpc RemoveMistakenProducts (DeleteProductItemRequest) returns (Void) {
  }
  rpc GetProductById (Id) returns (Product) {
  }
  rpc GetProductsByType (GRPCGetByTypeRequest) returns (GRPCProductResposne) {
  }
  rpc GetAllProductsByGlobalType (GRPCGetByTypeRequest) returns (GRPCProductResposne) {
  }
  rpc GetAllProductsByGlobalTypeForInherit (GRPCGetByTypeRequest) returns (GRPCProductResposne) {
  }
  rpc InheritProducts (ProductInherit) returns (Void) {
  }
  rpc UploadListToS3WithType (UploadWithType) returns (Path) {
  }
  rpc ImportDataset (ImportDatasetRequest) returns (Void) {
  }
  rpc PullGlobalProductChanges (ProductClientLocationRequest) returns (Void) {
  }
  rpc PullGlobalProductChangesForSelected (ProductsClientLocationRequest) returns (Void) {
  }
  rpc DeleteLocation(DeleteLocationRequest) returns (Void) {
  }
  rpc GetProductsByIds(ProductIds) returns (Products){
  }
  rpc ToggleLockProduct(Id) returns (Void) {
  }
}

message KidsRequest {
  string parentId = 1;
  string kidsId = 2;
}

message DeleteProductItemRequest {
  string productId = 1;
  string productItemId = 2;
}

message UploadId {
  string id = 1;
  bool isNew = 2;
  string listId = 3;
  string location = 4;
  string client = 5;
  GRPCGlobalType globalType = 6;
  string organization = 7;
}

message Id {
  string id = 1;
}

message BytesWrapper {
  string locationId = 1;
  bytes byteArray = 2;
}

message GRPCProductRequest {
  string locationId = 1;
  Product product = 2;
  string client = 3;
  string organization = 4;
}

message GRPCProductResposne {
  int32 page = 1;
  int32 size = 2;
  int32 count = 3;
  repeated Product products = 4;
}

message Product {
  string id = 1;
  string created = 2;
  string updated = 3;
  repeated MHSProduct mhsProducts = 4;
  string name = 5;
  string category = 6;
  string subCategory = 7;
  string status = 8;
  string ean = 9;
  bool mlc = 10;
  bool classifier = 11;
  int32 width = 12;
  int32 height = 13;
  string scheduleFrom = 14;
  string scheduleTo = 15;
  string capturingTime = 16;
  string terminalId = 17;
  string displayName = 18;
  repeated NameId sideDishes = 19;
  repeated NameId plateItems = 20;
  repeated NameId mistakenProducts = 21;
  repeated ProductImageResponse productImages = 22;
  string obid = 23;
  GRPCGlobalType globalType = 24;
  bool isVisible = 25;
  bool isVirtual = 26;
  repeated string categoryIds = 27;
  string trainLabel = 28;
  string parentId = 29;
  bool countryDataset = 30;
  bool globalDataset = 31;
  repeated NameId categoryResponse = 32;
  bool dirty = 33;
  Product kidsItem = 34;
  string globalId = 35;
  bool locked = 36;
  string client = 37;
}

message MHSProduct {
  string productId = 1;
  string indicator =2;
}

message Products {
  repeated Product products = 1;
}

message ProductId {
  string id = 1;
}

message ProductArchived {
  repeated string ids = 1;
  bool archived = 2;
}

message ArchivedProductsRequest {
  repeated GRPCFilter filter = 1;
  GRPCPaging paging = 2;
  GRPCSorting sorting = 3;
  GRPCGlobalType globalType = 4;
  string locationId = 5;
  string client = 6;
  string organization = 7;
}

message ProductClientLocationRequest {
  string location = 1;
  string productId = 2;
}

message ProductsClientLocationRequest {
  string location = 1;
  repeated string productIds = 2;
}

message ProductsAndProductList {
  repeated string productId = 1;
  string productListId = 2;
}

message ProductListId {
  string id = 1;
  repeated GRPCFilter filter = 2;
  GRPCPaging paging = 3;
  GRPCSorting sorting = 4;
}

message DateRange {
  string dateFrom = 1;
  string dateTo = 2;
}

message Status {
  string status = 1;
}

message Category {
  string name = 1;
}

message GRPCGetRequest {
  repeated string locationIds = 1;
  repeated GRPCFilter filter = 2;
  GRPCPaging paging = 3;
  GRPCSorting sorting = 4;
  int64 id = 5;
  string location = 6;
  string client = 7;
  GRPCGlobalType globalType = 8;
  string organization = 9;
}

message GRPCPaging {
  int32 page = 1;
  int32 size = 2;
}

message GRPCSorting {
  string field = 1;
  string order = 2;
}

message SideDishIds {
  string productId = 1;
  repeated NameId nameIds = 2;
}

message MistakenProductIds {
  string productId = 1;
  repeated NameId nameIds = 2;
}

message PlateItemIds {
  string productId = 1;
  repeated NameId nameIds = 2;
}

message ProductsRequest {
  repeated string productIds = 1;
  string client = 2;
  string locationId = 3;
  GRPCGlobalType globalType = 4;
  string organization = 5;
}

message LocationAndDeviceId {
  string locationId = 1;
  string deviceId = 2;
}

message NameId {
  string id = 1;
  string name = 2;
}

message PictureBytes {
  string productId = 1;
  string bytes = 2;
}

message ProductImages {
  string client = 1;
  string location = 2;
  string productId = 3;
  repeated ProductImage productImages = 4;
  GRPCGlobalType globalType = 5;
  string organization = 6;
}

message ProductImage {
  string image = 1;
  string imageName = 2;
  string imageType = 3;
  bool isMain = 4;
}

message ProductImageResponse {
  string id = 1;
  string path = 2;
  string imageName = 3;
  bool isMain = 4;
}

message DeleteProductImagesRequest {
  string client = 1;
  string location = 2;
  string productId = 3;
  repeated string imageIds = 4;
  GRPCGlobalType globalType = 5;
  string organization = 6;
}

message UpdateImageRequest {
  string id = 1;
  bool isMain = 2;
}

message ProductCategories {
  repeated string category = 1;
}
message OtherRequest {
  string client = 1;
  string location = 2;
  GRPCGlobalType globalType = 3;
  string organization = 4;
}

message ProductDatasetRequest {
  string type = 1;
  string client = 2;
  string location = 3;
  string organization = 4;
}

message ProductDatasetByTypeRequest {
  string type = 1;
  string client = 2;
  string location = 3;
  repeated string productNames = 4;
  string organization = 5;
}

message GRPCGetByTypeRequest {
  GRPCGlobalType globalType = 1;
  string client = 3;
  string location = 4;
  repeated GRPCFilter filter = 5;
  GRPCPaging paging = 6;
  GRPCSorting sorting = 7;
  string organization = 8;
}

message ProductInherit {
  GRPCGlobalType globalType = 1;
  repeated string productIds = 2;
  string client = 3;
  string location = 4;
  string locationId = 5;
  string organization = 6;
}

message UploadWithType {
  string listId = 1;
  string type = 2;
}

message Path {
  string path = 1;
}

message ImportDatasetRequest {
  string serviceType = 1;
  string productId = 2;
  string chosenProductId = 3;
  bool append = 4;
}

message DeleteLocationRequest {
  string locationId = 1;
  string location = 2;
  string client = 3;
  string organization = 4;
}

message ProductIds {
  repeated ProductId productIds = 1;
}