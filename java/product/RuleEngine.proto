syntax = "proto3";
option java_multiple_files = true;
option java_package = "ai.pixlbrain.backend";

package ai.pixlbrain.backend;

import "product/Product.proto";
import "inventory/Void.proto";
import "inventory/InventoryObject.proto";
import "common/Filter.proto";
import "common/Enums.proto";

service RuleEngineService {
    rpc SaveRuleEngine (RuleEngine) returns (RuleEngine) {
    }
    rpc GetRuleEnginesByType (GetRuleEnginesRequest) returns (RuleEnginesResponse) {
    }
    rpc UploadRuleEngineToS3 (RuleEngineId) returns (Void) {
    }
}

message RuleEngine {
    string id = 1;
    string name = 2;
    string created = 3;
    string updated = 4;
    string client = 5;
    string location = 6;
    string path = 7;
    string username = 8;
    repeated PlateFilter plateFiltering = 9;
    repeated string otherFiltering = 10;
    float overlapTreshold = 11;
    int32 sizeTreshold = 12;
    float detectionThreshold = 13;
    float classificationThreshold = 14;
    GRPCGlobalType globalType = 15;
}

message RuleEnginesResponse {
    int32 page = 1;
    int32 size = 2;
    int32 count = 3;
    repeated RuleEngine ruleEngines = 4;
}

message PlateFilter {
    string cls = 1;
    string mlc = 2;
}

message RuleEngineId {
    string id = 1;
}

message GetRuleEnginesRequest {
    string client = 1;
    string location = 2;
    GRPCGlobalType globalType = 3;
    repeated GRPCFilter filter = 4;
    GRPCPaging paging = 5;
    GRPCSorting sorting = 6;
}

