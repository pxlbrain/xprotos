syntax = "proto3";
package ai.pixlbrain.backend;

option java_multiple_files = true;
option java_package = "ai.pixlbrain.backend";

import "product/Product.proto";

message Device {
  string id = 1;
  string description = 2;
  string productionDate = 3;
  string locationId = 4;
  string locationName = 5;
  string created = 6;
  string updated = 7;
  string status = 9;
  string cameraLink = 10;
  string scoId = 11;
  string scoName = 12;
  string jsonConfig = 13;
  bool learningMode = 14;
  string mac = 15;
  string name = 16;
  string deviceType = 17;
  string mode = 18;
  string uptime = 19;
  string capacity = 20;
}


message DeviceId {
  string id = 1;
}

message Devices {
  repeated Device device = 1;
}

message Company {
  string id = 1;
  string name = 2;
  string address = 3;
  repeated Region regions = 4;
  string created = 5;
  string updated = 6;
  string displayName = 7;
  repeated Location locations = 8;
}

message Companies {
  repeated Company companies = 1;
}

message CompanyId {
  string id = 1;
}

message Location {
  string id = 1;
  string name = 2;
  string address = 3;
  string regionId = 4;
  string regionName = 5;
  repeated Device devices = 6;
  repeated SCO SCOs = 7;
  string created = 8;
  string updated = 9;
  string displayName = 10;
  string companyId = 11;
  string companyName = 12;
}

message Region {
  string id = 1;
  string name = 2;
  string companyId = 3;
  repeated Location locations = 4;
  string created = 5;
  string updated = 6;
}

message Regions {
  repeated Region regions = 1;
}

message RegionId {
  string id = 1;
}

message RegionIds {
  repeated RegionId regionIds = 1;
}

message Locations {
  repeated Location locations = 1;
}

message LocationId {
  string id = 1;
}

message SCO {
  string id = 1;
  string created = 2;
  string updated = 3;
  string name = 4;
}

message SCOs {
  repeated SCO scos = 1;
}

message GRPCGetLocationRequest {
  string companyId = 1;
  string locationId = 2;
  repeated GRPCFilter filter = 3;
  GRPCPaging paging = 4;
  GRPCSorting sorting = 5;
}

message GRPCGetLocationResponse {
  int32 page = 1;
  int32 size = 2;
  int32 count = 3;
  repeated Location locations = 4;
}

message GRPCGetDeviceResponse {
  int32 page = 1;
  int32 size = 2;
  int32 count = 3;
  repeated Device devices = 4;
}

message DeviceConfig {
  string id = 1;
  string jsonConfig = 2;
}

message LearningModeRequest {
  string id = 1;
  bool mode = 2;
  bool isInitial = 3;
}

message CompaniesAndLocations {
  repeated CompanyAndLocations companyAndLocations = 1;
}

message CompanyAndLocations {
  string company = 1;
  repeated string locations = 2;
}

message DeployModelRequest {
  string modelId = 1;
  repeated string deviceIds = 2;
  string modelVersion = 3;
  string type = 4;
}

message ScheduleRequest {
  string deviceId = 1;
  string from = 2;
  string to = 3;
}

message CompanyIds {
  repeated string ids = 1;
}

message LocationName {
  string name = 1;
}

message DeviceType {
  repeated string types = 1;
}

message DeviceStatuses {
  repeated DeviceStatus statuses = 1;
}

message DeviceAlerts {
   repeated DeviceAlert alerts = 1;
}

message DeviceServices {
   repeated Service services = 1;
}

message DeviceModels {
   repeated DeviceModel models = 1;
}

message DeviceHardware {
   string storage = 1;
   string ram = 2;
   string cpu = 3;
   string bandwidth = 4;
   string download = 5;
   string upload = 6;
   string deviceId = 7;
}

message DeviceStatus {
   string status = 1;
   string description = 2;
   string serviceName = 3;
   string deviceId = 4;
}

message DeviceAlert {
   string description = 1;
   string type = 2;
   string time = 3;
   string deviceId = 4;
}

message Service {
   string id = 1;
   string name = 2;
}

message DeviceModel {
   string id = 1;
   string version = 2;
   string type = 3;
   string activated = 4;
   string size = 5;
   bool active = 6;
}

message GRPCGetDeviceModelsRequest {
   string deviceId = 1;
   string type = 2;
   GRPCPaging paging = 3;
   GRPCSorting sorting = 4;
}

message GRPCDeviceModelResponse {
   int32 page = 1;
   int32 size = 2;
   int32 count = 3;
   repeated DeviceModel deviceModels = 4;
}

