syntax = "proto3";

option java_multiple_files = true;
option java_package = "ai.pixlbrain.backend";

import "inventory/Void.proto";
import "inventory/InventoryObject.proto";

package ai.pixlbrain.backend;

service CompanyService {
  rpc CreateCompany (Company) returns (Company) {};
  rpc UpdateCompany (Company) returns (Company) {};
  rpc DeleteCompany (CompanyId) returns (Void) {};
  rpc GetCompany (CompanyId) returns (Company) {};
  rpc GetAllCompanies (Void) returns (Companies) {};
};

service DeviceService {
  rpc CreateDevice (Device) returns (Device) {};
  rpc UpdateDevice (Device) returns (Device) {};
  rpc DeleteDevice (DeviceId) returns (Void) {};
  rpc GetDevice (DeviceId) returns (Device) {};
  rpc GetAllDevices (Void) returns (Devices) {};
  rpc GetDevicesByLocationId (LocationId) returns (Devices) {}
  rpc GetDevicesByCompanyId (GRPCGetLocationRequest) returns (GRPCGetDeviceResponse) {}
  rpc UpdateDeviceConfig (DeviceConfig) returns (Void) {}
}

service LocationService {
  rpc CreateLocations(Locations) returns (Locations) {};
  rpc CreateLocation (Location) returns (Location) {};
  rpc UpdateLocation (Location) returns (Location) {};
  rpc DeleteLocation (LocationId) returns (Void) {};
  rpc GetLocation (LocationId) returns (Location) {};
  rpc GetAllLocations (Void) returns (Locations) {};
  rpc GetLocationsByCompany (GRPCGetLocationRequest) returns (GRPCGetLocationResponse) {};
  rpc GetLocationsByCompanyId (CompanyId) returns (Locations) {};
  rpc GetLocationsByRegionId (RegionId) returns (Locations) {};
  rpc GetScosByLocationId (LocationId) returns (SCOs) {};
}

