syntax = "proto3";
package ai.pixlbrain.backend;

enum DatasetType {
    DETECTOR = 0;
    CLASSIFIER = 1;
    MLC = 2;
};

enum DatasetFormat {
    CUSTOM = 0;
    CSV = 1;
    COCO = 2;
    VOC = 3;
};

enum CoordinateFormat {
    TLBR = 0;
    BLTR = 1;
    CXCYWH = 2;
    TLWH = 3;
    BRWH = 4;
};

message Void {
};

message DatasetObjectId {
    string request = 1;
};

message Error {
    string message = 1;
};

message NewVersion {
    string message = 1;
    DatasetType datasetType = 2;
    DatasetFormat datasetFormat = 3;
    CoordinateFormat coordinateFormat = 4;
    string version = 5;
};

message GetVersion {
    string version = 1;
    string message = 2;
    string path = 3;
    string createdAt = 4;
    DatasetType datasetType = 5;
    CoordinateFormat coordinateFormat = 6;
};

message Configuration {
    int32 splitRatio = 1;
    string filename = 2;
    string imagesKey = 3;
};

message DatasetSplit {
    Configuration train = 1;
    Configuration validation = 2;
    Configuration test = 3;
};

message Files {
    repeated string path = 1;
    CoordinateFormat coordinatesFormat = 3;
};

message PTagFile {
    string path = 1;
    string productId = 2;
    string name = 3;
};

message PathTreeStruct {
    string productId = 2;
    string name = 3;
};

message PTagTreeFile {
    string path = 1;
    repeated PathTreeStruct tree = 2;
};

message PTagTreeFiles {
    repeated PTagTreeFile ptagFile = 1;
};

message PTagFiles {
    repeated PTagFile ptagFile = 1;
};

message BlockFiles {
    oneof data {
        PTagFiles ptagFiles = 1;
        PTagTreeFiles ptagTreeFiles = 2;
    };
    string request = 3;
};

message BlockMeta {
    string request = 1;
    string version = 2;
};

message CreateDataset {
    string version = 1;
    repeated string labels = 2;
    DatasetSplit split = 3;
    CoordinateFormat coordinatesFormat = 4;
    oneof data {
        Files csvPaths = 5;
        BlockFiles blockFiles = 6;
    };
};

message Job {
    string id = 1;
    string status = 2;
    string type = 3;
    string csv = 4;
};

message JobMeta {
    string request = 1;
    string status = 2;
    string type = 3;
    string version = 4;
    int32 numberOfFiles = 5;
    repeated Job jobs = 6;
};

message DatasetStatus {
    string version = 1;
    string path = 2;
    string type = 3;
    repeated JobMeta meta = 4;
    DatasetObjectId datasetObjectId = 5;
};

message MergeDataset{
    string version = 1;
    repeated string labels = 2;
    DatasetSplit split = 3;
    repeated string mergeWithVersions = 4;
};


message DeleteJob{
    string request_id = 1;
    string version = 2;
};

message DatasetRequest {
    oneof request {
        NewVersion newVersion = 1;
        GetVersion getVersion = 2;
        CreateDataset createDataset = 3;
        DatasetStatus datasetStatus = 4;
        DatasetObjectId datasetObjectId = 5;
        MergeDataset mergeDataset = 6;
        DeleteJob deleteJob = 7;
    };
};

message DatasetResponse {
    oneof response {
        NewVersion newVersion = 1;
        GetVersion getVersion = 2;
        DatasetStatus datasetStatus = 3;
        BlockMeta blockMeta = 4;
        DatasetObjectId datasetObjectId = 5;
        JobMeta jobMeta = 6;
        Error error = 7;
    };
};